{"version":3,"sources":["components/common/FormsControls/FormsControls.js","utils/validators.js","components/common/FormsControls/FormControls.module.css","components/Login/Login.module.css","components/Login/LoginForm.js","components/Login/Login.js","components/Login/LoginContainer.js"],"names":["Input","input","meta","props","hasError","touched","active","error","className","cn","s","formControl","Textarea","required","value","maxLength","length","minLength","validEmail","includes","module","exports","minLength8","maxLength16","reduxForm","form","handleSubmit","captcha","loginForm","onSubmit","Field","component","name","type","placeholder","validate","src","alt","checkBox","id","htmlFor","map","m","i","key","errorMessage","Login","onFormSubmit","hasErrors","messages","LoginContainer","formData","sendLoginData","this","isAuth","to","React","Component","mapDispatchToProps","connect","state","getIsAuth","getCaptcha"],"mappings":"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","file":"static/js/7.ef7e40a8.chunk.js","sourcesContent":["import React from 'react'\r\nimport s from './FormControls.module.css'\r\nimport cn from 'classnames'\r\n\r\n\r\nexport const Input = ({ input, meta, ...props }) => {\r\n\r\n    const hasError = meta.touched && !meta.active && meta.error\r\n\r\n    return (\r\n        <div className={cn(s.formControl, (hasError && s.error))}>\r\n            <input\r\n                {...input}\r\n                {...props}\r\n            />\r\n            {hasError && <span>{meta.error}</span>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport const Textarea = ({ input, meta, ...props }) => {\r\n\r\n    const hasError = meta.touched && !meta.active && meta.error\r\n\r\n    return (\r\n        <div className={cn(s.formControl, (hasError && s.error))}>\r\n            <textarea\r\n                {...input}\r\n                {...props}\r\n            />\r\n            {hasError && <span>{meta.error}</span>}\r\n        </div>\r\n    )\r\n}","export const required = (value) => !value && 'Field is required!'\r\nexport const maxLength = (maxLength) => (value) => {\r\n    if (value && value.length <= maxLength) {\r\n        return undefined\r\n    } else if (value) {\r\n        return `Max length is ${maxLength} symbols!`\r\n    }\r\n}\r\nexport const minLength = (minLength) => (value) => {\r\n    if (value && value.length >= minLength) {\r\n        return undefined\r\n    } else if (value) {\r\n        return `Min length is ${minLength} symbols!`\r\n    }\r\n}\r\nexport const validEmail = (value) => {\r\n    if (value && value.includes('@') && value.includes('.')) {\r\n        return undefined\r\n    } else {\r\n        return 'Invalid Email!'\r\n    }\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormControls_formControl__3NXQT\",\"error\":\"FormControls_error__3a80F\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loginForm\":\"Login_loginForm__3QbkV\",\"captcha\":\"Login_captcha__1uaKE\",\"checkBox\":\"Login_checkBox__QTfok\",\"errorMessage\":\"Login_errorMessage__3sX9R\"};","import React from 'react'\r\nimport s from './Login.module.css'\r\nimport { reduxForm, Field } from 'redux-form'\r\nimport { Input } from '../common/FormsControls/FormsControls'\r\nimport { required, maxLength, minLength, validEmail } from '../../utils/validators'\r\n\r\n\r\nconst minLength8 = minLength(8)\r\nconst maxLength16 = maxLength(16)\r\n\r\nconst LoginForm = ({ handleSubmit, error, captcha }) => {\r\n\r\n    return (\r\n        <form\r\n            className={s.loginForm}\r\n            onSubmit={handleSubmit}\r\n        >\r\n            <Field\r\n                component={Input}\r\n                name='email'\r\n                type='text'\r\n                placeholder='Email'\r\n                validate={[required, validEmail]}\r\n            />\r\n            <Field\r\n                component={Input}\r\n                name='password'\r\n                type='password'\r\n                placeholder='Password'\r\n                validate={[required, minLength8, maxLength16]}\r\n            />\r\n\r\n            {captcha && <div className={s.captcha}>\r\n                <img src={captcha} alt='captcha' />\r\n                <Field\r\n                    component={Input}\r\n                    name='captcha'\r\n                    type='text'\r\n                    placeholder='Captcha'\r\n                    validate={[required]}\r\n                />\r\n            </div>}\r\n\r\n            <div className={s.checkBox}>\r\n                <Field\r\n                    component={Input}\r\n                    name='rememberMe'\r\n                    type='checkbox'\r\n                    id='rememberMe'\r\n                />\r\n                <label htmlFor='rememberMe'>Remember me</label>\r\n            </div>\r\n            \r\n            {error && error.map((m, i) => <p key={i} className={s.errorMessage}>{m}</p>)}\r\n            <button type='submit'>Submit</button>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default reduxForm({\r\n    form: 'login'\r\n})(LoginForm)","import React from 'react'\r\nimport LoginForm from './LoginForm'\r\n\r\nconst Login = ({ onFormSubmit, hasErrors, messages, captcha }) => {\r\n\r\n    return (\r\n        <div>\r\n            <h3>Login</h3>\r\n            <LoginForm\r\n                onSubmit={onFormSubmit}\r\n                hasErrors={hasErrors}\r\n                messages={messages}\r\n                captcha={captcha}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Login","import React from 'react'\r\nimport Login from './Login'\r\nimport { connect } from 'react-redux'\r\nimport { sendLoginData } from '../../redux/auth-reducer'\r\nimport { Redirect } from 'react-router'\r\nimport { getIsAuth, getCaptcha } from '../../redux/selectors'\r\n\r\nclass LoginContainer extends React.Component {\r\n\r\n    onFormSubmit = (formData) => {\r\n        const { sendLoginData } = this.props\r\n        sendLoginData(formData)\r\n    }\r\n\r\n    render() {\r\n        const { isAuth, captcha } = this.props\r\n\r\n        return isAuth ? <Redirect to='/profile'/>\r\n            :   <Login\r\n                    onFormSubmit={this.onFormSubmit}\r\n                    captcha={captcha}\r\n                />\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    isAuth: getIsAuth(state),\r\n    captcha: getCaptcha(state)\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n    sendLoginData\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(LoginContainer)"],"sourceRoot":""}