{"version":3,"sources":["utils/validators.js","components/common/FormsControls/FormsControls.js","components/common/FormsControls/FormControls.module.css","components/Login/Login.module.css","components/Login/Login.js","components/Login/LoginContainer.js"],"names":["required","value","maxLength","length","minLength","validEmail","includes","Input","input","meta","props","hasError","touched","active","error","className","formControl","Textarea","module","exports","minLength8","maxLength16","LoginForm","handleSubmit","loginForm","onSubmit","Field","component","name","type","placeholder","validate","checkBox","id","htmlFor","map","m","i","key","errorMessage","Login","onFormSubmit","hasErrors","messages","LoginReduxForm","reduxForm","form","LoginContainer","formData","sendLoginData","this","isAuth","to","React","Component","mapDispatchToProps","connect","state","auth"],"mappings":"0GAAA,wIAAO,IAAMA,EAAW,SAACC,GAAD,OAAYA,GAAS,sBAChCC,EAAY,SAACA,GAAD,OAAe,SAACD,GACrC,KAAIA,GAASA,EAAME,QAAUD,GAEtB,OAAID,EACD,iBAAN,OAAwBC,EAAxB,kBADG,IAIEE,EAAY,SAACA,GAAD,OAAe,SAACH,GACrC,KAAIA,GAASA,EAAME,QAAUC,GAEtB,OAAIH,EACD,iBAAN,OAAwBG,EAAxB,kBADG,IAIEC,EAAa,SAACJ,GACvB,OAAIA,GAASA,EAAMK,SAAS,MAAQL,EAAMK,SAAS,UAC/C,EAEO,mB,2ICfFC,EAAQ,SAAC,GAA+B,IAA7BC,EAA4B,EAA5BA,MAAOC,EAAqB,EAArBA,KAASC,EAAY,gCAE1CC,EAAWF,EAAKG,UAAYH,EAAKI,QAAUJ,EAAKK,MAEtD,OACI,yBAAKC,UAAWC,cAAc,KAAOL,GAAYG,UAC7C,2CACQN,EACAE,IAEPC,GAAY,8BAAOF,EAAKK,SAKxBG,EAAW,SAAC,GAA+B,IAA7BT,EAA4B,EAA5BA,MAAOC,EAAqB,EAArBA,KAASC,EAAY,gCAE7CC,EAAWF,EAAKG,UAAYH,EAAKI,QAAUJ,EAAKK,MAEtD,OACI,yBAAKC,UAAWC,cAAc,KAAOL,GAAYG,UAC7C,8CACQN,EACAE,IAEPC,GAAY,8BAAOF,EAAKK,U,oBC5BrCI,EAAOC,QAAU,CAAC,YAAc,kCAAkC,MAAQ,8B,oBCA1ED,EAAOC,QAAU,CAAC,UAAY,yBAAyB,SAAW,wBAAwB,aAAe,8B,iJCuBnGC,EAAahB,YAAU,GACvBiB,EAAcnB,YAAU,IAExBoB,EAAY,SAAC,GAA6B,IAA3BC,EAA0B,EAA1BA,aAAcT,EAAY,EAAZA,MAE/B,OACI,0BACIC,UAAWS,YACXC,SAAUF,GAEV,kBAACG,EAAA,EAAD,CACIC,UAAWpB,IACXqB,KAAK,QACLC,KAAK,OACLC,YAAY,QACZC,SAAU,CAAC/B,IAAUK,OAEzB,kBAACqB,EAAA,EAAD,CACIC,UAAWpB,IACXqB,KAAK,WACLC,KAAK,WACLC,YAAY,WACZC,SAAU,CAAC/B,IAAUoB,EAAYC,KAErC,yBAAKN,UAAWiB,YACZ,kBAACN,EAAA,EAAD,CACIC,UAAWpB,IACXqB,KAAK,aACLC,KAAK,WACLI,GAAG,eAEP,2BAAOC,QAAQ,cAAf,gBAEHpB,GAASA,EAAMqB,KAAI,SAACC,EAAGC,GAAJ,OAAU,uBAAGC,IAAKD,EAAGtB,UAAWwB,gBAAeH,MACnE,4BAAQP,KAAK,UAAb,YAKGW,EAzDD,SAAC,GAA2C,IAAzCC,EAAwC,EAAxCA,aAAcC,EAA0B,EAA1BA,UAAWC,EAAe,EAAfA,SAEhCC,EAAiBC,YAAU,CAC7BC,KAAM,SADaD,CAEpBvB,GAEH,OACI,6BACI,qCACA,kBAACsB,EAAD,CACInB,SAAUgB,EACVC,UAAWA,EACXC,SAAUA,M,wBCZpBI,E,2MAEFN,aAAe,SAACO,IAEZC,EAD0B,EAAKvC,MAAvBuC,eACMD,I,wEAGR,IAAD,EACmCE,KAAKxC,MAArCyC,EADH,EACGA,OADH,EACWT,UADX,EACsBC,SAE3B,OAAOQ,EAAS,kBAAC,IAAD,CAAUC,GAAG,aACrB,kBAAC,EAAD,CACIX,aAAcS,KAAKT,mB,GAZVY,IAAMC,WAqB7BC,EAAqB,CACvBN,mBAGWO,uBARS,SAACC,GAAD,MAAY,CAChCN,OAAQM,EAAMC,KAAKP,UAOiBI,EAAzBC,CAA6CT","file":"static/js/7.f3f89c27.chunk.js","sourcesContent":["export const required = (value) => !value && 'Field is required!'\r\nexport const maxLength = (maxLength) => (value) => {\r\n    if (value && value.length <= maxLength) {\r\n        return undefined\r\n    } else if (value) {\r\n        return `Max length is ${maxLength} symbols!`\r\n    }\r\n}\r\nexport const minLength = (minLength) => (value) => {\r\n    if (value && value.length >= minLength) {\r\n        return undefined\r\n    } else if (value) {\r\n        return `Min length is ${minLength} symbols!`\r\n    }\r\n}\r\nexport const validEmail = (value) => {\r\n    if (value && value.includes('@') && value.includes('.')) {\r\n        return undefined\r\n    } else {\r\n        return 'Invalid Email!'\r\n    }\r\n}","import React from 'react'\r\nimport { formControl, error } from './FormControls.module.css'\r\n\r\n\r\nexport const Input = ({ input, meta, ...props }) => {\r\n\r\n    const hasError = meta.touched && !meta.active && meta.error\r\n\r\n    return (\r\n        <div className={formControl + ' ' + (hasError && error)}>\r\n            <input\r\n                {...input}\r\n                {...props}\r\n            />\r\n            {hasError && <span>{meta.error}</span>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport const Textarea = ({ input, meta, ...props }) => {\r\n\r\n    const hasError = meta.touched && !meta.active && meta.error\r\n\r\n    return (\r\n        <div className={formControl + ' ' + (hasError && error)}>\r\n            <textarea\r\n                {...input}\r\n                {...props}\r\n            />\r\n            {hasError && <span>{meta.error}</span>}\r\n        </div>\r\n    )\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormControls_formControl__3NXQT\",\"error\":\"FormControls_error__3a80F\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loginForm\":\"Login_loginForm__3QbkV\",\"checkBox\":\"Login_checkBox__QTfok\",\"errorMessage\":\"Login_errorMessage__3sX9R\"};","import React from 'react'\r\nimport { loginForm, checkBox, errorMessage } from './Login.module.css'\r\nimport { reduxForm, Field } from 'redux-form'\r\nimport { Input } from '../common/FormsControls/FormsControls'\r\nimport { required, maxLength, minLength, validEmail } from '../../utils/validators'\r\n\r\nconst Login = ({ onFormSubmit, hasErrors, messages }) => {\r\n\r\n    const LoginReduxForm = reduxForm({\r\n        form: 'login'\r\n    })(LoginForm)\r\n\r\n    return (\r\n        <div>\r\n            <h1>Login</h1>\r\n            <LoginReduxForm \r\n                onSubmit={onFormSubmit}\r\n                hasErrors={hasErrors}\r\n                messages={messages}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nconst minLength8 = minLength(8)\r\nconst maxLength16 = maxLength(16)\r\n\r\nconst LoginForm = ({ handleSubmit, error }) => {\r\n\r\n    return (\r\n        <form\r\n            className={loginForm}\r\n            onSubmit={handleSubmit}\r\n        >\r\n            <Field\r\n                component={Input}\r\n                name='email'\r\n                type='text'\r\n                placeholder='Email'\r\n                validate={[required, validEmail]}\r\n            />\r\n            <Field\r\n                component={Input}\r\n                name='password'\r\n                type='password'\r\n                placeholder='Password'\r\n                validate={[required, minLength8, maxLength16]}\r\n            />\r\n            <div className={checkBox}>\r\n                <Field\r\n                    component={Input}\r\n                    name='rememberMe'\r\n                    type='checkbox'\r\n                    id='rememberMe'\r\n                />\r\n                <label htmlFor='rememberMe'>Remember me</label>\r\n            </div>\r\n            {error && error.map((m, i) => <p key={i} className={errorMessage}>{m}</p>)}\r\n            <button type='submit'>Submit</button>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default Login","import React from 'react'\r\nimport Login from './Login'\r\nimport { connect } from 'react-redux'\r\nimport { sendLoginData } from '../../redux/auth-reducer'\r\nimport { Redirect } from 'react-router'\r\n\r\nclass LoginContainer extends React.Component {\r\n\r\n    onFormSubmit = (formData) => {\r\n        const { sendLoginData } = this.props\r\n        sendLoginData(formData)\r\n    }\r\n\r\n    render() {\r\n        const { isAuth, hasErrors, messages } = this.props\r\n\r\n        return isAuth ? <Redirect to='/profile'/>\r\n            :   <Login\r\n                    onFormSubmit={this.onFormSubmit}\r\n                />\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    isAuth: state.auth.isAuth,\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n    sendLoginData\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(LoginContainer)"],"sourceRoot":""}