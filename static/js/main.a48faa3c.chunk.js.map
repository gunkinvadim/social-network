{"version":3,"sources":["components/Sidebar/Sidebar.module.css","redux/selectors.ts","components/Header/Header.module.css","redux/sidebar-reducer.ts","components/Header/Header.js","components/Header/HeaderContainer.js","components/Sidebar/Friends/Friends.js","components/Sidebar/Sidebar.js","components/Sidebar/Friends/FriendsContainer.js","components/Sidebar/SidebarContainer.js","components/HOC/withSuspense.js","components/modals/ErrorPopup/ErrorPopup.js","components/modals/ErrorPopup/ErrorPopupContainer.js","App.js","redux/redux-store.ts","index.js","components/common/Preloader/Preloader.js","redux/auth-reducer.ts","components/modals/ErrorPopup/ErrorPopup.module.css","redux/profile-reducer.ts","components/Sidebar/Friends/Friends.module.css","redux/app-reducer.ts","redux/users-reducer.ts","api/api.js","redux/messages-reducer.ts","components/common/Preloader/Preloader.module.css","assets/images/spinner.gif"],"names":["module","exports","getAuthData","state","auth","authData","getIsAuth","isAuth","getCaptcha","captcha","getIsProfileLoading","profilePage","isLoading","getProfileData","profileData","getProfileIsEditMode","isEditMode","getIsStatusLoading","isStatusLoading","getProfileStatus","status","getIsMyProfile","isMyProfile","getPostsData","postsData","getIsPhotoUpdating","isPhotoUpdating","getDialogs","messagesPage","dialogsData","getMessages","messagesData","getIsAppInit","app","isInit","getHasError","hasError","getIsSidebarShown","sidebar","isSidebarShown","getFriendsList","friends","getUsers","usersPage","users","getPageSize","pageSize","getTotalUsersCount","totalUsersCount","getCurrentPage","currentPage","getIsUsersLoading","createSelector","filter","u","initialState","id","name","toggleShowSidebar","showSidebar","type","sidebarReducer","action","Header","login","onMenuBtnClick","logout","className","s","header","cn","headerBtn","menuBtn","onClick","Preloader","greetingBlock","to","logoutBtn","loginBtn","mapDispatchToProps","connect","Friends","title","map","key","item","Sidebar","closeSidebar","active","e","target","sidebarContent","closeBtn","sidebarMenu","activeClassName","withSuspense","Component","props","Suspense","fallback","ErrorPopup","closeErrorPopup","errorPopupWrapper","errorPopup","toggleHasError","ProfileContainer","lazy","MessagesContainer","UsersContainer","Music","News","SettingsContainer","LoginContainer","App","catchAllUnhandleErrors","promiseRejectionEvent","console","error","this","initApp","window","addEventListener","removeEventListener","path","render","React","compose","withRouter","reducers","combineReducers","appReducer","profileReducer","messagesReducer","usersReducer","authReducer","form","formReducer","store","createStore","applyMiddleware","thunk","ReactDOM","document","getElementById","preloader","src","spinnerImg","alt","email","toggleAuthLoading","setCaptcha","requestAuthData","dispatch","a","authAPI","resultCode","data","sendLoginData","loginData","stopSubmit","_error","messages","url","ADD_POST","text","likes","isLiked","length","liked","photos","addPost","likePost","setStatus","toggleStatusLoading","toggleIsMyProfile","toggleLoading","toggleEditMode","toggleIsPhotoUpdating","updatePhotoSuccess","requestProfile","profileAPI","getProfile","getStatus","statusData","updateStatus","updateProfilePhoto","file","updatePhoto","log","updateProfileData","newProfileData","getState","followed","isFollowed","isFollowDisabled","followSuccess","toggleFollowDisabled","setCurrentPage","requestUsers","pageNumber","usersAPI","items","totalCount","requireFollow","willFollow","followUser","unfollowUser","instance","axios","baseURL","withCredentials","headers","get","then","res","post","delete","put","formData","FormData","append","newData","sendMessage"],"mappings":"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","file":"static/js/main.a48faa3c.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"sidebar\":\"Sidebar_sidebar__1TBxp\",\"sidebarContent\":\"Sidebar_sidebarContent__1e51H\",\"closeBtn\":\"Sidebar_closeBtn__2AY-t\",\"sidebarMenu\":\"Sidebar_sidebarMenu__2VLC_\",\"active\":\"Sidebar_active__2s3qF\"};","import { UserDataType } from './users-reducer';\r\nimport { FriendDataType } from './sidebar-reducer';\r\nimport { AuthDataType } from './auth-reducer';\r\nimport { createSelector } from 'reselect'\r\nimport { ProfileDataType, PostType } from './profile-reducer';\r\nimport { DialogType, MessageType } from './messages-reducer';\r\n\r\n\r\nexport const getAuthData = (state: any): AuthDataType => state.auth.authData\r\nexport const getIsAuth = (state: any): boolean => state.auth.isAuth\r\nexport const getIsAuthLoading = (state: any): boolean => state.auth.isLoading\r\nexport const getCaptcha = (state: any): string | null => state.auth.captcha\r\n\r\nexport const getIsProfileLoading = (state: any):boolean => state.profilePage.isLoading\r\nexport const getProfileData = (state: any): ProfileDataType => state.profilePage.profileData\r\nexport const getProfileIsEditMode = (state: any): boolean => state.profilePage.isEditMode\r\nexport const getIsStatusLoading = (state: any): boolean => state.profilePage.isStatusLoading\r\nexport const getProfileStatus = (state: any): string | null => state.profilePage.status\r\nexport const getIsMyProfile = (state: any): boolean => state.profilePage.isMyProfile\r\nexport const getPostsData = (state: any): Array<PostType> => state.profilePage.postsData\r\nexport const getIsPhotoUpdating = (state: any): boolean => state.profilePage.isPhotoUpdating\r\n\r\nexport const getDialogs = (state: any): Array<DialogType> => state.messagesPage.dialogsData\r\nexport const getMessages = (state: any): Array<MessageType> => state.messagesPage.messagesData\r\n\r\nexport const getIsAppInit = (state: any): boolean => state.app.isInit\r\nexport const getHasError = (state: any): boolean => state.app.hasError\r\n\r\nexport const getIsSidebarShown = (state: any): boolean => state.sidebar.isSidebarShown\r\nexport const getFriendsList = (state: any): Array<FriendDataType> => state.sidebar.friends\r\n\r\nexport const getUsers = (state: any): Array<UserDataType> => state.usersPage.users\r\nexport const getPageSize = (state: any): number => state.usersPage.pageSize\r\nexport const getTotalUsersCount = (state: any): number => state.usersPage.totalUsersCount\r\nexport const getCurrentPage = (state: any): number => state.usersPage.currentPage\r\nexport const getIsUsersLoading = (state: any): boolean => state.usersPage.isLoading\r\n\r\nexport const getEditProfileInfoForm = (state: any): any => state.form.editProfile\r\n\r\n\r\nexport const getUsersFiltered = createSelector(getUsers,\r\n    (users) => users && users.filter((u: UserDataType): boolean => true))","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__1mtZd\",\"greetingBlock\":\"Header_greetingBlock__aoSG2\",\"headerBtn\":\"Header_headerBtn__9pACM\",\"loginBtn\":\"Header_loginBtn__29lWH\",\"logoutBtn\":\"Header_logoutBtn__120ZI\",\"menuBtn\":\"Header_menuBtn__3RIY9\"};","const TOGGLE_SHOW_SIDEBAR = 'sidebar/TOGGLE_SHOW_SIDEBAR'\r\n\r\nexport type FriendDataType = {\r\n    id: number\r\n    name: string\r\n}\r\n\r\nexport type InitialStateType = {\r\n    isSidebarShown: boolean\r\n    friends: Array<FriendDataType>\r\n}\r\n\r\nconst initialState: InitialStateType = {\r\n    isSidebarShown: false,\r\n    friends: [\r\n        {id: 1, name: 'Andrew'},\r\n        {id: 2, name: 'Sergey'},\r\n        {id: 3, name: 'Vadim'}\r\n    ]\r\n}\r\n\r\n\r\nconst sidebarReducer = (state = initialState,\r\n    action: ToggleShowSidebarType): InitialStateType => {\r\n    switch (action.type) {\r\n        case TOGGLE_SHOW_SIDEBAR:\r\n            return {\r\n                ...state,\r\n                isSidebarShown: action.showSidebar\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nexport type ToggleShowSidebarType = {\r\n    type: typeof TOGGLE_SHOW_SIDEBAR\r\n    showSidebar: boolean\r\n}\r\nexport const toggleShowSidebar = (showSidebar: boolean): ToggleShowSidebarType => ({\r\n    type: TOGGLE_SHOW_SIDEBAR,\r\n    showSidebar\r\n})\r\n\r\nexport default sidebarReducer","import React from 'react'\r\nimport s from './Header.module.css'\r\nimport cn from 'classnames'\r\nimport Preloader from '../common/Preloader/Preloader'\r\nimport { NavLink } from 'react-router-dom'\r\n\r\nconst Header = ({ isAuth, isLoading, login, onMenuBtnClick, logout }) => {\r\n    return (\r\n        <header className={s.header}>\r\n            <button\r\n                className={cn(s.headerBtn, s.menuBtn)}\r\n                onClick={onMenuBtnClick}\r\n            >\r\n                Menu\r\n            </button>\r\n            {isLoading ? <Preloader /> :  <div className={s.greetingBlock}>\r\n                {isAuth && <p>Hi, <NavLink to='/profile/'>{login}</NavLink>!</p>}\r\n                {isAuth\r\n                    ? <button \r\n                        className={`${s.headerBtn} ${s.logoutBtn}`}\r\n                        onClick={logout}\r\n                      >Logout</button>\r\n                    : <NavLink to='/login'>\r\n                        <button className={cn(s.headerBtn, s.loginBtn)}>\r\n                            Login\r\n                        </button>\r\n                    </NavLink>\r\n                }\r\n            </div>}\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Header","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { toggleShowSidebar } from '../../redux/sidebar-reducer'\r\nimport { logout } from '../../redux/auth-reducer'\r\nimport Header from './Header'\r\n\r\nconst HeaderContainer = ({ isAuth, isLoading, authData, toggleShowSidebar, logout }) => {\r\n\r\n    const onMenuBtnClick = () => {\r\n        toggleShowSidebar(true)\r\n    }\r\n\r\n    return <Header\r\n        isAuth={isAuth}\r\n        isLoading={isLoading}\r\n        login={authData.login}\r\n        logout={logout}\r\n        onMenuBtnClick={onMenuBtnClick}\r\n    />\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    const { authData, isLoading, isAuth } = state.auth\r\n\r\n    return { authData, isLoading, isAuth }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    toggleShowSidebar,\r\n    logout\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(HeaderContainer)","import React from 'react'\r\nimport s from './Friends.module.css'\r\n\r\nconst Friends = ({ friends }) => {\r\n\r\n    return (\r\n        <div>\r\n            <h3 className={s.title}>Friends</h3>\r\n            <ul>\r\n                {friends.map(({ id, name }) => <li key={id}>\r\n                    <a className={s.item}>{name}</a>\r\n                </li>)}\r\n            </ul>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Friends","import React from 'react'\r\nimport { NavLink } from 'react-router-dom'\r\nimport s from './Sidebar.module.css'\r\nimport cn from 'classnames'\r\nimport FriendsContainer from './Friends/FriendsContainer'\r\n\r\nconst Sidebar = ({ isMyProfile, isSidebarShown, closeSidebar }) => {\r\n    return (\r\n        <section\r\n            className={cn(s.sidebar, isSidebarShown && s.active)}\r\n            onClick={(e) => {\r\n                e.target.className === cn(s.sidebar, s.active) && closeSidebar()\r\n            }}\r\n        >\r\n            <div className={s.sidebarContent}>\r\n                <button\r\n                    className={s.closeBtn}\r\n                    onClick={closeSidebar}\r\n                >&times;</button>\r\n                <nav className={s.sidebarMenu}>\r\n                    <ul onClick={closeSidebar}>\r\n                        <li>\r\n                            <NavLink to='/profile' activeClassName={cn(isMyProfile && s.active)}>Profile</NavLink>\r\n                        </li>\r\n                        {/* <li>\r\n                            <NavLink to='/messages' activeClassName={s.active}>Messages</NavLink>\r\n                        </li> */}\r\n                        <li>\r\n                            <NavLink to='/news' activeClassName={s.active}>News</NavLink>\r\n                        </li>\r\n                        <li>\r\n                            <NavLink to='/music' activeClassName={s.active}>Music</NavLink>\r\n                        </li>\r\n                        <li>\r\n                            <NavLink to='/users' activeClassName={s.active}>Users</NavLink>\r\n                        </li>\r\n                        <li>\r\n                            <NavLink to='/settings' activeClassName={s.active}>Settings</NavLink>\r\n                        </li>\r\n                    </ul>\r\n                </nav>\r\n                {/* <FriendsContainer /> */}\r\n            </div>\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default Sidebar","import { connect } from 'react-redux'\r\nimport Friends from './Friends'\r\nimport { getFriendsList } from '../../../redux/selectors'\r\n\r\n\r\nconst mapStateToProps = (state) => ({\r\n    friends: getFriendsList(state)\r\n})\r\n\r\nconst FriendsContainer = connect(mapStateToProps)(Friends)\r\n\r\nexport default FriendsContainer","import React from 'react'\r\nimport Sidebar from './Sidebar'\r\nimport { getIsMyProfile, getIsSidebarShown } from \"../../redux/selectors\"\r\nimport { toggleShowSidebar } from '../../redux/sidebar-reducer'\r\nimport { connect } from 'react-redux'\r\n\r\nconst SidebarContainer = ({ isMyProfile, isSidebarShown, toggleShowSidebar }) => {\r\n\r\n    const closeSidebar = () => {\r\n            toggleShowSidebar(false)    \r\n    }\r\n\r\n    return <Sidebar\r\n        isMyProfile={isMyProfile}\r\n        isSidebarShown={isSidebarShown}\r\n        closeSidebar={closeSidebar}\r\n    />\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    isMyProfile: getIsMyProfile(state),\r\n    isSidebarShown: getIsSidebarShown(state)\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n    toggleShowSidebar\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SidebarContainer)","import React from 'react'\r\nimport Preloader from '../common/Preloader/Preloader'\r\nimport { deletePost } from '../../redux/profile-reducer'\r\n\r\nconst withSuspense = (Component) => {\r\n\r\n    return (props) => {\r\n        return (\r\n            <React.Suspense fallback={<Preloader/>}>\r\n                <Component {...props}/>\r\n            </React.Suspense>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default withSuspense","import React from 'react'\r\nimport s from './ErrorPopup.module.css'\r\n\r\nconst ErrorPopup = ({ closeErrorPopup }) => {\r\n    return (\r\n        <div \r\n            className={s.errorPopupWrapper}\r\n            onClick={(e) => {\r\n                e.target.className === s.errorPopupWrapper && closeErrorPopup()\r\n            }}\r\n        >\r\n            <div className={s.errorPopup}>\r\n                <button \r\n                    className={s.closeBtn}\r\n                    onClick={closeErrorPopup}\r\n                >&times;</button>\r\n                <p>An error has occurred! Please try again.</p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ErrorPopup","import React from 'react'\r\nimport ErrorPopup from './ErrorPopup'\r\nimport { connect } from 'react-redux'\r\nimport { toggleHasError } from '../../../redux/app-reducer'\r\n\r\n\r\nconst ErrorPopupContainer = ({ toggleHasError }) => {\r\n\r\n    const closeErrorPopup = () => {\r\n        toggleHasError(false)\r\n    }\r\n\r\n    return <ErrorPopup\r\n        closeErrorPopup={closeErrorPopup}\r\n    />\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    toggleHasError\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(ErrorPopupContainer)","import React, { lazy, Suspense } from 'react'\nimport { Route, Switch, Redirect, withRouter } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport { compose } from 'redux'\nimport './App.css'\nimport HeaderContainer from './components/Header/HeaderContainer'\nimport SidebarContainer from './components/Sidebar/SidebarContainer'\nimport { initApp, toggleHasError } from './redux/app-reducer'\nimport Preloader from './components/common/Preloader/Preloader'\nimport { getIsAppInit, getHasError, getIsAuth } from './redux/selectors'\nimport withSuspense from './components/HOC/withSuspense'\nimport ErrorPopupContainer from './components/modals/ErrorPopup/ErrorPopupContainer'\n\nconst ProfileContainer = lazy(() => import('./components/Profile/ProfileContainer'))\nconst MessagesContainer = lazy(() => import('./components/Messages/MessagesContainer'))\nconst UsersContainer = lazy(() => import('./components/Users/UsersContainer'))\nconst Music = lazy(() => import('./components/Music/Music'))\nconst News = lazy(() => import('./components/News/News'))\nconst SettingsContainer = lazy(() => import('./components/Settings/SettingsContainer'))\nconst LoginContainer = lazy(() => import('./components/Login/LoginContainer'))\n\n\nclass App extends React.Component {\n\n  catchAllUnhandleErrors = (promiseRejectionEvent) => {\n    this.props.toggleHasError(true)\n    console.error(promiseRejectionEvent)\n  }\n\n  componentDidMount() {\n    this.props.initApp()\n    window.addEventListener('unhandledrejection', this.catchAllUnhandleErrors)\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('unhandledrejection', this.catchAllUnhandleErrors)\n  }\n\n  render() {\n    const {isInit, hasError} = this.props\n\n    if (!isInit) {\n      return (\n        <div className='preloader-container'>\n          <Preloader />\n        </div>\n      )\n    }\n\n    return (\n      <div className='app-wrapper'>\n        {hasError && <ErrorPopupContainer />}\n        <HeaderContainer />\n        <SidebarContainer />\n        <div className='app-wrapper-content'>\n          <Switch>\n            <Route\n              path='/profile/:userId?'\n              render={withSuspense(ProfileContainer)}\n            />\n            <Route path='/messages'\n              render={withSuspense(MessagesContainer)}\n            />\n            <Route path='/news' render={withSuspense(News)}\n            />\n            <Route path='/music' render={withSuspense(Music)}\n            />\n            <Route path='/users' render={withSuspense(UsersContainer)}\n            />\n            <Route path='/settings' render={withSuspense(SettingsContainer)}\n            />\n            <Route path='/login' render={withSuspense(LoginContainer)}\n            />\n            <Redirect to='/profile' />\n          </Switch>\n        </div>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  isInit: getIsAppInit(state),\n  hasError: getHasError(state),\n  isAuth: getIsAuth(state)\n})\n\nconst mapDispatchToProps = {\n  initApp,\n  toggleHasError\n}\n\nexport default compose(\n  withRouter,\n  connect(mapStateToProps, mapDispatchToProps)\n)(App)","import { createStore, combineReducers, applyMiddleware, compose } from 'redux'\r\nimport appReducer from './app-reducer'\r\nimport sidebarReducer from './sidebar-reducer'\r\nimport profileReducer from './profile-reducer'\r\nimport messagesReducer from './messages-reducer'\r\nimport usersReducer from './users-reducer'\r\nimport authReducer from './auth-reducer'\r\nimport { reducer as formReducer } from 'redux-form'\r\nimport thunk from 'redux-thunk'\r\n\r\n\r\nconst reducers = combineReducers({\r\n    app: appReducer,\r\n    sidebar: sidebarReducer,\r\n    profilePage: profileReducer,\r\n    messagesPage: messagesReducer,\r\n    usersPage: usersReducer,\r\n    auth: authReducer,\r\n    form: formReducer\r\n})\r\n\r\n\r\n// const composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose\r\nconst store = createStore(\r\n    reducers, \r\n    applyMiddleware(thunk)\r\n)\r\n// window.store = store\r\n\r\nexport default store","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport store from './redux/redux-store'\nimport { HashRouter } from 'react-router-dom'\nimport { Provider } from 'react-redux'\nimport './App.css'\n\n\nReactDOM.render(\n    <HashRouter>\n        <Provider store={store} >\n            <App />\n        </Provider>\n    </HashRouter>,\n    document.getElementById('root')\n)","import React from 'react'\r\nimport s from './Preloader.module.css'\r\nimport spinnerImg from '../../../assets/images/spinner.gif'\r\n\r\nconst Preloader = () => {\r\n    return (\r\n        <img className={s.preloader} src={spinnerImg} alt='loading...' />\r\n    )\r\n}\r\n\r\nexport default Preloader","import { authAPI } from '../api/api'\r\nimport { stopSubmit } from 'redux-form'\r\nimport { toggleHasError } from './app-reducer'\r\n\r\nconst SET_AUTH_DATA = 'auth/SET_AUTH_DATA'\r\nconst SET_CAPTCHA = 'auth/SET_CAPTCHA'\r\nconst CLEAR_AUTH_DATA = 'auth/CLEAR_AUTH_DATA'\r\nconst TOGGLE_AUTH_LOADING = 'auth/TOGGLE_AUTH_LOADING'\r\n\r\nexport type AuthDataType = {\r\n    id: number | null\r\n    login: string | null\r\n    email: string | null\r\n}\r\n\r\nexport type InitialStateType = {\r\n    authData: AuthDataType\r\n    captcha: string | null\r\n    isAuth: boolean\r\n    isLoading: boolean\r\n}\r\n\r\nconst initialState: InitialStateType = {\r\n    authData: {\r\n        id: null,\r\n        login: null,\r\n        email: null\r\n    },\r\n    captcha: null,\r\n    isAuth: false,\r\n    isLoading: false\r\n}\r\n\r\n\r\nconst authReducer = (\r\n    state = initialState,\r\n    action: SetAuthDataActionType | ClearAuthDataActionType\r\n        | ToggleIsAuthLoadingActionType | SetCaptchaActionType\r\n): InitialStateType => {\r\n    switch (action.type) {\r\n        case SET_AUTH_DATA:\r\n            return {\r\n                ...state,\r\n                authData: {\r\n                    id: action.authData.id,\r\n                    login: action.authData.login,\r\n                    email: action.authData.email,\r\n                },\r\n                isAuth: true,\r\n                captcha: null\r\n            }\r\n        case SET_CAPTCHA:\r\n            return {\r\n                ...state,\r\n                captcha: action.captcha\r\n            }\r\n        case CLEAR_AUTH_DATA:\r\n            return {\r\n                ...state,\r\n                authData: {\r\n                    id: null,\r\n                    login: null,\r\n                    email: null\r\n                },\r\n                isAuth: false\r\n            }\r\n        case TOGGLE_AUTH_LOADING:\r\n            return {\r\n                ...state,\r\n                isLoading: action.isLoading\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n// ActionCreators\r\n\r\n\r\nexport type SetAuthDataActionType = {\r\n    type: typeof SET_AUTH_DATA\r\n    authData: AuthDataType\r\n}\r\nexport const setAuthData = (authData: AuthDataType): SetAuthDataActionType =>\r\n    ({ type: SET_AUTH_DATA, authData })\r\n\r\n\r\nexport type ClearAuthDataActionType = { type: typeof CLEAR_AUTH_DATA }\r\nexport const clearAuthData = (): ClearAuthDataActionType => ({ type: CLEAR_AUTH_DATA })\r\n\r\n\r\nexport type ToggleIsAuthLoadingActionType = {\r\n    type: typeof TOGGLE_AUTH_LOADING\r\n    isLoading: boolean\r\n}\r\nexport const toggleAuthLoading = (isLoading: boolean): ToggleIsAuthLoadingActionType =>\r\n    ({ type: TOGGLE_AUTH_LOADING, isLoading })\r\n\r\n\r\nexport type SetCaptchaActionType = {\r\n    type: typeof SET_CAPTCHA\r\n    captcha: string\r\n}\r\nexport const setCaptcha = (captcha: string): SetCaptchaActionType =>\r\n    ({ type: SET_CAPTCHA, captcha })\r\n\r\n\r\n// ThunkCreators\r\n\r\nexport const requestAuthData = () => async (dispatch: Function) => {\r\n    dispatch(toggleAuthLoading(true))\r\n\r\n    try {\r\n        const { resultCode, data } = await authAPI.getAuthData()\r\n    \r\n        if (resultCode === 0) dispatch(setAuthData(data))\r\n        dispatch(toggleAuthLoading(false))\r\n    } catch(err) {\r\n        console.error(err)\r\n        dispatch(toggleHasError(true))\r\n        dispatch(toggleAuthLoading(false))\r\n    }\r\n}\r\n\r\nexport const sendLoginData = (loginData: object): Function => async (dispatch: Function) => {\r\n    try {\r\n        const data = await authAPI.login(loginData)\r\n\r\n        if (data.resultCode === 0) {\r\n            dispatch(requestAuthData())\r\n        } else if (data.resultCode === 10) {\r\n            const captcha = await authAPI.getCaptcha()\r\n            await dispatch(stopSubmit('login', {_error: data.messages}))\r\n            dispatch(setCaptcha(captcha.url))\r\n        } else {\r\n            dispatch(stopSubmit('login', {_error: data.messages}))\r\n        }\r\n    } catch(err) {\r\n        console.error(err)\r\n        dispatch(toggleHasError(true))\r\n    }\r\n}\r\n\r\nexport const logout = (): Function => async (dispatch: Function) => {\r\n    dispatch(toggleAuthLoading(true))\r\n    \r\n    try {\r\n        const { resultCode } = await authAPI.logout()\r\n\r\n        if (resultCode === 0) {\r\n            dispatch(toggleAuthLoading(false))\r\n            dispatch(clearAuthData())\r\n        }\r\n    } catch(err) {\r\n        console.error(err)\r\n        dispatch(toggleHasError(true))\r\n        dispatch(toggleAuthLoading(false))\r\n    }\r\n}\r\n\r\nexport default authReducer","// extracted by mini-css-extract-plugin\nmodule.exports = {\"errorPopupWrapper\":\"ErrorPopup_errorPopupWrapper__3edGm\",\"errorPopup\":\"ErrorPopup_errorPopup__3lExb\",\"closeBtn\":\"ErrorPopup_closeBtn__zyU_4\"};","import { profileAPI } from '../api/api'\r\nimport { stopSubmit } from 'redux-form'\r\nimport { getAuthData } from './selectors'\r\nimport { toggleHasError } from './app-reducer'\r\n\r\nconst ADD_POST = 'profile/ADD_POST'\r\nconst DELETE_POST = 'profile/DELETE_POST'\r\nconst LIKE_POST = 'profile/LIKE_POST'\r\nconst SET_PROFILE = 'profile/SET_PROFILE'\r\nconst SET_STATUS = 'profile/SET_STATUS'\r\nconst TOGGLE_STATUS_LOADING = 'profile/TOGGLE_STATUS_LOADING'\r\nconst TOGGLE_IS_MY_PROFILE = 'profile/TOGGLE_IS_MY_PROFILE'\r\nconst TOGGLE_PROFILE_LOADING = 'profile/TOGGLE_PROFILE_LOADING'\r\nconst TOGGLE_IS_EDIT_MODE = 'profile/TOGGLE_EDIT_MODE'\r\nconst TOGGLE_IS_PHOTO_UPDATING = 'profile/TOGGLE_IS_PHOTO_UPDATING'\r\nconst UPDATE_PHOTO_SUCCESS = 'profile/UPDATE_PHOTO_SUCCESS'\r\n\r\n\r\nexport type PhotosType = {\r\n    small: string | null\r\n    large: string | null\r\n}\r\n\r\nexport type ContactsType = {\r\n    github: string | null\r\n    vk: string | null\r\n    facebook: string | null\r\n    instagram: string | null\r\n    twitter: string | null\r\n    website: string | null\r\n    youtube: string | null\r\n    mainLink: string | null\r\n}\r\n\r\nexport type ProfileDataType = {\r\n    userId: number\r\n    lookingForAJob: boolean\r\n    lookingForAJobDescription: string\r\n    fullName: string\r\n    contacts: ContactsType\r\n    photos: PhotosType\r\n}\r\n\r\nexport type PostType = {\r\n    id: number\r\n    text: string\r\n    likes: number\r\n    isLiked: boolean\r\n}\r\n\r\nexport type InitialStateType = {\r\n    isLoading: boolean\r\n    profileData: ProfileDataType | null\r\n    isStatusLoading: boolean\r\n    status: string | null,\r\n    isMyProfile: boolean\r\n    isEditMode: boolean\r\n    isPhotoUpdating: boolean\r\n    postsData: Array<PostType>\r\n}\r\n\r\nconst initialState: InitialStateType = {\r\n    isLoading: false,\r\n    profileData: null,\r\n    isStatusLoading: false,\r\n    status: null,\r\n    isMyProfile: false,\r\n    isEditMode: false,\r\n    isPhotoUpdating: false,\r\n    postsData: [\r\n        { id: 1, text: `Hi, how are you?`, likes: 0, isLiked: false },\r\n        { id: 2, text: `It's my first post!`, likes: 0, isLiked: false },\r\n        { id: 3, text: `111`, likes: 0, isLiked: false }\r\n    ]\r\n}\r\n\r\n\r\nconst profileReducer = (\r\n    state = initialState,\r\n    action: AddPostActionType | DeletePostActionType |\r\n        LikePostActionType | SetProfileActionType |\r\n        SetStatusActionType | ToggleStatusLoadingActionType |\r\n        ToggleIsMyProfileActionType | ToggleLoadingActionType |\r\n        ToggleEditModeActionType | ToggleIsPhotoUpdatingActionType |\r\n        updatePhotoSuccessActionType\r\n): InitialStateType => {\r\n\r\n    switch (action.type) {\r\n        case ADD_POST:\r\n            let data = state.postsData\r\n            return {\r\n                ...state,\r\n                postsData: [...data, {\r\n                    id: data[data.length - 1].id + 1,\r\n                    text: action.text,\r\n                    likes: 0,\r\n                    isLiked: false\r\n                }]\r\n            }\r\n        case DELETE_POST:\r\n            return {\r\n                ...state,\r\n                postsData: state.postsData.filter(item => item.id != action.id)\r\n            }\r\n        case LIKE_POST:\r\n            return {\r\n                ...state,\r\n                postsData: state.postsData.map((item) => {\r\n                    if (item.id === action.id) {\r\n                        return {\r\n                            ...item,\r\n                            likes: !item.isLiked ? item.likes + 1 : item.likes - 1,\r\n                            liked: !item.isLiked\r\n                        }\r\n                    } else {\r\n                        return {...item}\r\n                    }\r\n                })\r\n            }\r\n        case SET_PROFILE:\r\n            return {\r\n                ...state,\r\n                profileData: {...action.profileData},\r\n            }\r\n        case SET_STATUS:\r\n            return {\r\n                ...state,\r\n                status: action.status\r\n            }\r\n        case TOGGLE_STATUS_LOADING:\r\n            return {\r\n                ...state,\r\n                isStatusLoading: action.isStatusLoading\r\n            }\r\n        case TOGGLE_IS_MY_PROFILE:\r\n            return {\r\n                ...state,\r\n                isMyProfile: action.isMyProfile\r\n            }\r\n        case TOGGLE_PROFILE_LOADING:\r\n            return {\r\n                ...state,\r\n                isLoading: action.isLoading\r\n            }\r\n        case TOGGLE_IS_EDIT_MODE:\r\n            return {\r\n                ...state,\r\n                isEditMode: action.isEditMode\r\n            }\r\n        case TOGGLE_IS_PHOTO_UPDATING:\r\n            return {\r\n                ...state,\r\n                isPhotoUpdating: action.isPhotoUpdating\r\n            }\r\n        case UPDATE_PHOTO_SUCCESS:\r\n            return {\r\n                ...state,\r\n                profileData: state.profileData && {\r\n                    ...state.profileData,\r\n                    photos: {...action.photos}\r\n                }\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\nexport default profileReducer\r\n\r\n\r\n// ActionCreators\r\n\r\n\r\nexport type AddPostActionType = {\r\n    type: typeof ADD_POST\r\n    text: string\r\n}\r\nexport const addPost = (text: string): AddPostActionType => ({\r\n    type: ADD_POST,\r\n    text\r\n})\r\n\r\n\r\nexport type DeletePostActionType = {\r\n    type: typeof DELETE_POST\r\n    id: number\r\n}\r\nexport const deletePost = (id: number): DeletePostActionType => ({\r\n    type: DELETE_POST,\r\n    id\r\n})\r\n\r\n\r\nexport type LikePostActionType = {\r\n    type: typeof LIKE_POST\r\n    id: number\r\n}\r\nexport const likePost = (id: number): LikePostActionType => ({\r\n    type: LIKE_POST,\r\n    id\r\n})\r\n\r\n\r\nexport type SetProfileActionType = {\r\n    type: typeof SET_PROFILE\r\n    profileData: ProfileDataType\r\n}\r\nexport const setProfile = (profileData: ProfileDataType): SetProfileActionType => ({\r\n    type: SET_PROFILE,\r\n    profileData\r\n})\r\n\r\n\r\nexport type SetStatusActionType = {\r\n    type: typeof SET_STATUS\r\n    status: string\r\n}\r\nexport const setStatus = (status: string): SetStatusActionType => ({\r\n    type: SET_STATUS,\r\n    status\r\n})\r\n\r\n\r\nexport type ToggleStatusLoadingActionType = {\r\n    type: typeof TOGGLE_STATUS_LOADING\r\n    isStatusLoading: boolean\r\n}\r\nexport const toggleStatusLoading = (isStatusLoading: boolean):\r\n    ToggleStatusLoadingActionType => ({\r\n    type: TOGGLE_STATUS_LOADING,\r\n    isStatusLoading\r\n})\r\n\r\n\r\nexport type ToggleIsMyProfileActionType = {\r\n    type: typeof TOGGLE_IS_MY_PROFILE\r\n    isMyProfile: boolean\r\n}\r\nexport const toggleIsMyProfile = (isMyProfile: boolean):\r\n    ToggleIsMyProfileActionType => ({\r\n    type: TOGGLE_IS_MY_PROFILE,\r\n    isMyProfile\r\n})\r\n\r\n\r\nexport type ToggleLoadingActionType = {\r\n    type: typeof TOGGLE_PROFILE_LOADING\r\n    isLoading: boolean\r\n}\r\nexport const toggleLoading = (isLoading: boolean):\r\n    ToggleLoadingActionType => ({\r\n    type: TOGGLE_PROFILE_LOADING,\r\n    isLoading\r\n})\r\n\r\n\r\nexport type ToggleEditModeActionType = {\r\n    type: typeof TOGGLE_IS_EDIT_MODE\r\n    isEditMode: boolean\r\n}\r\nexport const toggleEditMode = (isEditMode: boolean): ToggleEditModeActionType => ({\r\n    type: TOGGLE_IS_EDIT_MODE,\r\n    isEditMode\r\n})\r\n\r\n\r\nexport type ToggleIsPhotoUpdatingActionType = {\r\n    type: typeof TOGGLE_IS_PHOTO_UPDATING\r\n    isPhotoUpdating: boolean\r\n}\r\nexport const toggleIsPhotoUpdating = (isPhotoUpdating: boolean):\r\n    ToggleIsPhotoUpdatingActionType => ({\r\n    type: TOGGLE_IS_PHOTO_UPDATING,\r\n    isPhotoUpdating\r\n})\r\n\r\n\r\nexport type updatePhotoSuccessActionType = {\r\n    type: typeof UPDATE_PHOTO_SUCCESS\r\n    photos: PhotosType\r\n}\r\nexport const updatePhotoSuccess = (photos: PhotosType):\r\nupdatePhotoSuccessActionType => ({\r\n    type: UPDATE_PHOTO_SUCCESS,\r\n    photos\r\n})\r\n\r\n\r\n// ThunkCreators\r\n\r\nexport const requestProfile = (id: number | null, isMyProfile: boolean): Function =>\r\n    async (dispatch: Function) => {\r\n    dispatch(toggleLoading(true))\r\n    dispatch(toggleIsMyProfile(isMyProfile))\r\n\r\n    try {\r\n        const data = await profileAPI.getProfile(id)\r\n        const statusData = await profileAPI.getStatus(id)\r\n        dispatch(setProfile(data))\r\n        dispatch(setStatus(statusData))\r\n        dispatch(toggleLoading(false))\r\n    } catch(err) {\r\n        console.error(err)\r\n        dispatch(toggleHasError(true))\r\n        dispatch(toggleLoading(false))\r\n    }\r\n}\r\n\r\nexport const updateStatus = (status: string): Function =>\r\n    async (dispatch: Function) => {\r\n    dispatch(toggleStatusLoading(true))\r\n\r\n    try {\r\n        const { resultCode } = await profileAPI.updateStatus(status)\r\n        if (resultCode === 0) dispatch(setStatus(status))\r\n        dispatch(toggleStatusLoading(false))\r\n    } catch(err) {\r\n        console.error(err)\r\n        dispatch(toggleHasError(true))\r\n        dispatch(toggleStatusLoading(false))\r\n    }\r\n}\r\n\r\nexport const updateProfilePhoto = (file: string): Function =>\r\n    async (dispatch: Function) => {\r\n    dispatch(toggleIsPhotoUpdating(true))\r\n\r\n    try {\r\n        const { resultCode, data: {photos}, messages } = await profileAPI.updatePhoto(file)\r\n\r\n        if (resultCode === 0) {\r\n            dispatch(updatePhotoSuccess(photos))\r\n            dispatch(toggleIsPhotoUpdating(false))\r\n        } else {\r\n            console.log(messages)\r\n        }\r\n    } catch(err) {\r\n        console.error(err)\r\n        dispatch(toggleHasError(true))\r\n        dispatch(toggleIsPhotoUpdating(false))\r\n    }\r\n}\r\n\r\nexport const updateProfileData = (newProfileData: ProfileDataType) =>\r\n    async (dispatch: Function, getState: Function) => {\r\n    try {\r\n        const { resultCode, messages } = await profileAPI.updateProfileData(newProfileData)\r\n        if (resultCode === 0) {\r\n            dispatch(requestProfile(getAuthData(getState()).id, true))\r\n            dispatch(toggleEditMode(false))\r\n        } else {\r\n            dispatch(stopSubmit('editProfile', {_error: messages}))\r\n        }\r\n    } catch(err) {\r\n        console.error(err)\r\n        dispatch(toggleHasError(true))\r\n    }\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"Friends_title__253JH\",\"item\":\"Friends_item__RQkGl\"};","import { requestAuthData } from \"./auth-reducer\"\r\n\r\nconst INIT_APP_SUCCESS = 'app/INIT_APP_SUCCESS'\r\nconst TOGGLE_HAS_ERROR = 'app/TOGGLE_HAS_ERROR'\r\n\r\nexport type InitialStateType = {\r\n    isInit: boolean\r\n    hasError: boolean\r\n}\r\n\r\nconst initialState: InitialStateType = {\r\n    isInit: false,\r\n    hasError: false\r\n}\r\n\r\n\r\nconst appReducer = (\r\n    state = initialState,\r\n    action: InitAppSuccessActionType | ToggleHasErrorActionType\r\n): InitialStateType => {\r\n    switch (action.type) {\r\n        case INIT_APP_SUCCESS:\r\n            return {\r\n                ...state,\r\n                isInit: true\r\n            }\r\n        case TOGGLE_HAS_ERROR:\r\n            return {\r\n                ...state,\r\n                hasError: action.hasError\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport type InitAppSuccessActionType = {\r\n    type: typeof INIT_APP_SUCCESS\r\n}\r\nexport const initAppSuccess = (): InitAppSuccessActionType =>\r\n    ({ type: INIT_APP_SUCCESS })\r\n\r\n\r\nexport type ToggleHasErrorActionType = {\r\n    type: typeof TOGGLE_HAS_ERROR\r\n    hasError: boolean\r\n}\r\nexport const toggleHasError = (hasError: boolean): ToggleHasErrorActionType =>\r\n    ({ type: TOGGLE_HAS_ERROR, hasError })\r\n\r\n\r\nexport const initApp = (): Function => async (dispatch: Function) => {\r\n    await dispatch(requestAuthData())\r\n    dispatch(initAppSuccess())\r\n}\r\n\r\nexport default appReducer","import { usersAPI } from '../api/api'\r\nimport { toggleHasError } from './app-reducer'\r\n\r\nconst FOLLOW_SUCCESS = 'users/FOLLOW_SUCCESS'\r\nconst TOGGLE_FOLLOW_DISABLED = 'users/TOGGLE_FOLLOW_DISABLED'\r\nconst SET_USERS = 'users/SET_USERS'\r\nconst SET_CURRENT_PAGE = 'users/SET_CURRENT_PAGE'\r\nconst TOGGLE_USERS_LOADING = 'users/TOGGLE_USERS_LOADING'\r\n\r\nexport type PhotosType = {\r\n    small: string | null\r\n    large: string | null\r\n}\r\n\r\nexport type UserDataType = {\r\n    id: number\r\n    name: string\r\n    status: string | null\r\n    photos: PhotosType\r\n    followed: boolean\r\n    isFollowDisabled?: boolean\r\n}\r\n\r\nexport type InitialStateType = {\r\n    users: Array<UserDataType>\r\n    pageSize: number\r\n    totalUsersCount: number\r\n    currentPage: number\r\n    isLoading: boolean\r\n}\r\n\r\nconst initialState: InitialStateType = {\r\n    users: [],\r\n    pageSize: 5,\r\n    totalUsersCount: 0,\r\n    currentPage: 1,\r\n    isLoading: false\r\n}\r\n\r\nconst usersReducer = (\r\n    state = initialState,\r\n    action: FollowSuccessType | ToggleFollowDisabledType\r\n        | SetUsersType | SetCurrentPageType | ToggleLoadingType\r\n    ): InitialStateType => {\r\n\r\n    switch (action.type) {\r\n        case FOLLOW_SUCCESS:\r\n            return {\r\n                ...state,\r\n                users: state.users.map((item) => {\r\n                    if (item.id === action.id) {\r\n                        return { ...item, followed: action.isFollowed }\r\n                    } else {\r\n                        return item\r\n                    }\r\n                })\r\n            }\r\n        case TOGGLE_FOLLOW_DISABLED:\r\n            return {\r\n                ...state,\r\n                users: state.users.map((item) => {\r\n                    if (item.id === action.id) {\r\n                        return { ...item, isFollowDisabled: action.isFollowDisabled }\r\n                    } else {\r\n                        return item\r\n                    }\r\n                })\r\n            }\r\n        case SET_USERS:\r\n            return {\r\n                ...state,\r\n                users: [...action.users],\r\n                totalUsersCount: action.totalUsersCount\r\n            }\r\n        case SET_CURRENT_PAGE:\r\n            return {\r\n                ...state,\r\n                currentPage: action.currentPage\r\n            }\r\n        case TOGGLE_USERS_LOADING:\r\n            return {\r\n                ...state,\r\n                isLoading: action.isLoading\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default usersReducer\r\n\r\n\r\n// ActionCreators\r\n\r\nexport type FollowSuccessType = {\r\n    type: typeof FOLLOW_SUCCESS\r\n    id: number\r\n    isFollowed: boolean\r\n}\r\nexport const followSuccess = (id: number, isFollowed: boolean): FollowSuccessType => ({\r\n    type: FOLLOW_SUCCESS,\r\n    id,\r\n    isFollowed\r\n})\r\n\r\nexport type ToggleFollowDisabledType = {\r\n    type: typeof TOGGLE_FOLLOW_DISABLED\r\n    id: number\r\n    isFollowDisabled: boolean\r\n}\r\nexport const toggleFollowDisabled = (id: number,\r\n    isFollowDisabled: boolean): ToggleFollowDisabledType => ({\r\n    type: TOGGLE_FOLLOW_DISABLED,\r\n    id,\r\n    isFollowDisabled\r\n})\r\n\r\nexport type SetUsersType = {\r\n    type: typeof SET_USERS\r\n    users: Array<UserDataType>\r\n    totalUsersCount: number\r\n}\r\nexport const setUsers = (users: Array<UserDataType>,\r\n    totalUsersCount: number): SetUsersType => ({\r\n    type: SET_USERS,\r\n    users,\r\n    totalUsersCount\r\n})\r\n\r\nexport type SetCurrentPageType = {\r\n    type: typeof SET_CURRENT_PAGE\r\n    currentPage: number\r\n}\r\nexport const setCurrentPage = (currentPage: number): SetCurrentPageType => ({\r\n    type: SET_CURRENT_PAGE,\r\n    currentPage\r\n})\r\n\r\nexport type ToggleLoadingType = {\r\n    type: typeof TOGGLE_USERS_LOADING\r\n    isLoading: boolean\r\n}\r\nexport const toggleLoading = (isLoading: boolean): ToggleLoadingType => ({\r\n    type: TOGGLE_USERS_LOADING,\r\n    isLoading\r\n})\r\n\r\n\r\n// ThunkCreators\r\n\r\nexport const requestUsers = (pageNumber: number, pageSize: number): Function =>\r\n    async (dispatch: Function) => {\r\n    dispatch(toggleLoading(true))\r\n    \r\n    const { items, totalCount } = await usersAPI.getUsers(pageNumber, pageSize)\r\n    dispatch(setUsers(items, totalCount))\r\n    dispatch(toggleLoading(false))\r\n}\r\n\r\nexport const requireFollow = (id: number, willFollow: boolean): Function =>\r\n    async (dispatch: Function) => {\r\n    dispatch(toggleFollowDisabled(id, true))\r\n\r\n    try {\r\n        const { resultCode } = await (willFollow\r\n            ? usersAPI.followUser(id)\r\n            : usersAPI.unfollowUser(id))\r\n    if (resultCode === 0) dispatch(followSuccess(id, willFollow))\r\n    dispatch(toggleFollowDisabled(id, false))\r\n    } catch(err) {\r\n        console.error(err)\r\n        dispatch(toggleHasError(true))\r\n        dispatch(toggleFollowDisabled(id, false))\r\n    }\r\n}","import * as axios from 'axios'\r\n\r\n\r\nconst instance = axios.create({\r\n    baseURL: 'https://social-network.samuraijs.com/api/1.0/',\r\n    withCredentials: true,\r\n    headers: {\r\n        'API-KEY': '727d7a8b-28cd-456e-989f-7956b9659d91'\r\n    }\r\n})\r\n\r\nexport const usersAPI = {\r\n    getUsers(currentPage, pageSize) {\r\n        return instance.get(`users?page=${currentPage}&count=${pageSize}`)\r\n            .then(res => res.data)\r\n    },\r\n\r\n    followUser(id) {\r\n        return instance.post(`follow/${id}`)\r\n            .then(res => res.data)\r\n    },\r\n\r\n    unfollowUser(id) {\r\n        return instance.delete(`follow/${id}`)\r\n            .then(res => res.data)\r\n    }\r\n}\r\n\r\nexport const profileAPI = {\r\n    getProfile(id) {\r\n        return instance.get(`profile/${id}`)\r\n            .then(res => res.data)\r\n    },\r\n    \r\n    getStatus(id) {\r\n        return instance.get(`profile/status/${id}`)\r\n            .then(res => res.data)\r\n    },\r\n\r\n    updateStatus(status) {\r\n        return instance.put(`profile/status`, { status })\r\n            .then(res => res.data)\r\n    },\r\n\r\n    updatePhoto(file) {\r\n        const formData = new FormData()\r\n        formData.append('image', file, file.name)\r\n\r\n        return instance.put(`profile/photo`, formData, {\r\n            headers: {\r\n                'Content-type': 'multipart/form-data'\r\n            }\r\n        })\r\n            .then(res => res.data)\r\n    },\r\n\r\n    updateProfileData(newData) {\r\n\r\n        \r\n        return instance.put(`profile`, newData)\r\n            .then(res => res.data)\r\n    }\r\n}\r\n\r\nexport const authAPI = {\r\n    getAuthData() {\r\n        return instance.get(`auth/me`)\r\n            .then(res => res.data)\r\n    },\r\n    login(loginData) {\r\n        return instance.post(`auth/login`, loginData)\r\n            .then(res => res.data)\r\n    },\r\n    getCaptcha() {\r\n        return instance.get(`security/get-captcha-url`)\r\n            .then(res => res.data)\r\n    },\r\n    logout() {\r\n        return instance.delete(`auth/login`)\r\n            .then(res => res.data)\r\n    }\r\n}","const SEND_MESSAGE = 'messages/SEND_MESSAGE'\r\n\r\nexport type DialogType = {\r\n    id: number\r\n    name: string\r\n}\r\n\r\nexport type MessageType = {\r\n    id: number\r\n    text: string\r\n}\r\n\r\nexport type InitialStateType = {\r\n    dialogsData: Array<DialogType>\r\n    messagesData: Array<MessageType>\r\n}\r\n\r\nconst initialState: InitialStateType = {\r\n    dialogsData: [\r\n        { id: 1, name: 'Dimych' },\r\n        { id: 2, name: 'Andrey' },\r\n        { id: 3, name: 'Katya' },\r\n        { id: 4, name: 'Sasha' }\r\n    ],\r\n    messagesData: [\r\n        { id: 1, text: 'Hi!' },\r\n        { id: 2, text: 'How are you?' },\r\n        { id: 3, text: '111' }\r\n    ]\r\n}\r\n\r\n\r\nconst messagesReducer = (state = initialState,\r\n    action: sendMessageActionType): InitialStateType => {\r\n\r\n    switch (action.type) {\r\n        case SEND_MESSAGE:\r\n            let data = state.messagesData\r\n            return  {\r\n                ...state,\r\n                messagesData: [...data, {\r\n                    id: data[data.length - 1].id + 1,\r\n                    text: action.text\r\n                }]\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\nexport default messagesReducer\r\n\r\n\r\nexport type sendMessageActionType = {\r\n    type: typeof SEND_MESSAGE\r\n    text: string\r\n}\r\nexport const sendMessage = (text: string): sendMessageActionType => ({\r\n    type: SEND_MESSAGE,\r\n    text\r\n})","// extracted by mini-css-extract-plugin\nmodule.exports = {\"preloader\":\"Preloader_preloader__fE5AI\"};","module.exports = __webpack_public_path__ + \"static/media/spinner.e6022fed.gif\";"],"sourceRoot":""}